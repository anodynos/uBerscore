// Generated by uRequire v0.3.0alpha21
(function () {
  var __isAMD = (typeof define === 'function' && define.amd),
    __isNode = (typeof exports === 'object'),
    __isWeb = !__isNode;
(function (root,factory) {
  if (typeof exports === 'object') {
   var nr = new (require('urequire').NodeRequirer) ('blending/Blender-spec', module, __dirname, '.');
   module.exports = factory(nr.require, exports, module, nr.require('chai'), nr.require('lodash'), nr.require('uberscore'), nr.require('../spec-data'));
 } else if (typeof define === 'function' && define.amd) {
     define(['require', 'exports', 'module', 'chai', 'lodash', 'uberscore', '../spec-data', './shared/deepExtendExamples-specs', './shared/lodashMerge-specs', './shared/lodashMerge_Blender-specs'], factory);
 }
})(this,function (require, exports, module, chai, _, _B, data) {
  // uRequire: start body of original nodejs module
var assert, expect, l;

assert = chai.assert;

expect = chai.expect;

l = new _B.Logger("Blender-spec", 0);

describe("Blender / blend :", function() {
    var deepExtendLike_blender, lodashMergeLike_blender;
    deepExtendLike_blender = new _B.Blender([ {
        order: [ "src", "dst" ],
        String: {
            "*": "overwriteOrReplace"
        },
        Array: {
            "[]": function(prop, src, dst) {
                return _.reject(this.deepOverwrite(prop, src, dst), function(v) {
                    return v === null || v === void 0;
                });
            },
            "*": function(prop, src, dst) {
                throw "deepExtend: Error: Trying to combine an array with a non-array.\n\nProperty: " + prop + "\ndestination[prop]: " + l.prettify(dst[prop]) + "\nsource[prop]: " + l.prettify(src[prop]);
            }
        },
        Object: {
            "{}": function(prop, src, dst) {
                var deepBlended, key, val, _ref;
                _ref = deepBlended = this.deepOverwrite(prop, src, dst);
                for (key in _ref) {
                    val = _ref[key];
                    if (val === null || val === void 0) {
                        delete deepBlended[key];
                    }
                }
                return deepBlended;
            },
            "*": function(prop, src, dst) {
                throw "deepExtend: Error trying to combine a PlainObject with a non-PlainObject.\n\nProperty: " + prop + "\ndestination[prop]: " + l.prettify(dst[prop]) + "\nsource[prop]: " + l.prettify(src[prop]);
            }
        }
    } ], {
        replaceRE: /\${\s*?_\s*?}/,
        overwriteOrReplace: function(prop, src, dst) {
            if (_.isString(src[prop]) && this.replaceRE.test(src[prop])) {
                if (_.isString(dst[prop])) {
                    return src[prop].replace(this.replaceRE, dst[prop]);
                } else {
                    return dst[prop];
                }
            } else {
                return src[prop];
            }
        }
    });
    require("./shared/deepExtendExamples-specs")(deepExtendLike_blender.blend);
    lodashMergeLike_blender = new _B.Blender({
        order: [ "src" ],
        Undefined: function() {
            return this.SKIP;
        },
        Null: function() {
            return this.SKIP;
        }
    });
    require("./shared/lodashMerge-specs")(lodashMergeLike_blender.blend);
    return require("./shared/lodashMerge_Blender-specs")(lodashMergeLike_blender.blend);
});
// uRequire: end body of original nodejs module


return module.exports;
})
})();