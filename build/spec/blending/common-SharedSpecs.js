// Generated by uRequire v0.3.0alpha18
(function () {
  var __isAMD = (typeof define === 'function' && define.amd),
    __isNode = (typeof exports === 'object'),
    __isWeb = !__isNode;
(function (root,factory) {
  if (typeof exports === 'object') {
   var nr = new (require('urequire').NodeRequirer) ('blending/common-SharedSpecs', module, __dirname, '.');
   module.exports = factory(nr.require, exports, module, nr.require('chai'), nr.require('lodash'), nr.require('uberscore'), nr.require('../spec-data'));
 } else if (typeof define === 'function' && define.amd) {
     define(['require', 'exports', 'module', 'chai', 'lodash', 'uberscore', '../spec-data'], factory);
 }
})(this,function (require, exports, module, chai, _, _B, data) {
  // uRequire: start body of original nodejs module
var arrInt, arrInt2, arrStr, assert, bundleDefaults, expect, globalDefaults, obj, personDetails, personDetails2, persons, projectDefaults, _ref;

assert = chai.assert;

expect = chai.expect;

_ref = _.clone(data, true), projectDefaults = _ref.projectDefaults, globalDefaults = _ref.globalDefaults, bundleDefaults = _ref.bundleDefaults, obj = _ref.obj, arrInt = _ref.arrInt, arrInt2 = _ref.arrInt2, arrStr = _ref.arrStr, persons = _ref.persons, personDetails = _ref.personDetails, personDetails2 = _ref.personDetails2;

module.exports = function(deepExtendMergeBlend) {
    return describe("common (deepExtend, _.merge, _B.blend) examples", function() {
        var blended;
        blended = deepExtendMergeBlend(persons, personDetails, personDetails2);
        it("'Persons' are deeply extended, overwriting from right to left.", function() {
            return expect(blended).to.deep.equal([ {
                surname: "Peakoulas",
                name: "Agelos",
                age: 42,
                male: true,
                address: {
                    street: "1 Peak Str",
                    country: "Earth"
                },
                familyState: {
                    married: true,
                    children: 3
                }
            }, {
                name: "AnoDyNoS",
                age: 33,
                job: "Dreamer, developer, doer",
                familyState: {
                    married: false,
                    children: 0
                }
            } ]);
        });
        return it("'Persons' === the destination/target/extended object", function() {
            return expect(blended).to.equal(persons);
        });
    });
};
// uRequire: end body of original nodejs module


return module.exports;
})
})();