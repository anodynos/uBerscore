// Generated by uRequire v0.3.0alpha15
(function (root, factory) {
  if (typeof exports === 'object') {
    var nr = new (require('urequire').NodeRequirer) ('arrayize-spec', __dirname, '.');
    module.exports = factory(nr.require, exports, module);
  } else if (typeof define === 'function' && define.amd) {
      define(['require', 'exports', 'module', 'chai', 'lodash', 'uBerscore', './spec-data'], factory);
  }
})(this, function (require, exports, module) {
 var isWeb = (typeof define === 'function' && define.amd), isNode = !isWeb;

// uRequire: start body of original nodejs module
var assert, chai, data, expect, _, _B;

chai = require("chai");

assert = chai.assert;

expect = chai.expect;

_ = require("lodash");

_B = require("uBerscore");

data = require("./spec-data");

describe("arrayize :", function() {
    it("arrayize a String", function() {
        return expect(_B.arrayize("agelos")).to.deep.equal([ "agelos" ]);
    });
    it("arrayize a Number", function() {
        return expect(_B.arrayize(19)).to.deep.equal([ 19 ]);
    });
    it("arrayize an Object", function() {
        return expect(_B.arrayize({
            a: 1,
            b: 2
        })).to.deep.equal([ {
            a: 1,
            b: 2
        } ]);
    });
    it("arrayize an existing array", function() {
        var arr;
        arr = [ 1, "john" ];
        return expect(_B.arrayize(arr)).to.equal(arr);
    });
    return it("arrayize nothingness", function() {
        return expect(_B.arrayize(void 0)).to.deep.equal([]);
    });
});
// uRequire: end body of original nodejs module


return module.exports; 
});