// Generated by uRequire v0.7.0-beta4 - template: 'UMD' 
(function (window, global) {
  
var __isAMD = !!(typeof define === 'function' && define.amd),
    __isNode = (typeof exports === 'object'),
    __isWeb = !__isNode;
(function (factory) {
  if (typeof exports === 'object') {
    var nr = new (require('urequire').NodeRequirer) ('collections/array/arrayize-spec', module, __dirname, '.');
    module.exports = factory(nr.require, exports, module, nr.require('chai'), nr.require('lodash'), nr.require('uberscore'), nr.require('../../specHelpers'), nr.require('../../spec-data'));
} else if (typeof define === 'function' && define.amd) { define(['require', 'exports', 'module', 'chai', 'lodash', 'uberscore', '../../specHelpers', '../../spec-data'], factory) } else throw new Error('uRequire: Loading UMD module as <script>, without `build.noLoaderUMD`');
}).call(this, function (require, exports, module, chai, _, _B, specHelpers, data) {
  

var equal = specHelpers["equal"],notEqual = specHelpers["notEqual"],ok = specHelpers["ok"],notOk = specHelpers["notOk"],tru = specHelpers["tru"],fals = specHelpers["fals"],deepEqual = specHelpers["deepEqual"],notDeepEqual = specHelpers["notDeepEqual"],exact = specHelpers["exact"],notExact = specHelpers["notExact"],iqual = specHelpers["iqual"],notIqual = specHelpers["notIqual"],ixact = specHelpers["ixact"],notIxact = specHelpers["notIxact"],like = specHelpers["like"],notLike = specHelpers["notLike"],likeBA = specHelpers["likeBA"],notLikeBA = specHelpers["notLikeBA"],equalSet = specHelpers["equalSet"],notEqualSet = specHelpers["notEqualSet"];
var expect = chai["expect"];


var l = new _B.Logger('collections/array/arrayize-spec.js');

var arrInt, arrInt2, arrStr, bundle, global, obj, project, _ref;
_ref = _.clone(data, true), project = _ref.project, global = _ref.global, bundle = _ref.bundle, obj = _ref.obj, arrInt = _ref.arrInt, arrInt2 = _ref.arrInt2, arrStr = _ref.arrStr;
describe("arrayize :", function () {
  it("arrayize a String", function () {
    return expect(_B.arrayize("agelos")).to.deep.equal(["agelos"]);
  });
  it("arrayize a Number", function () {
    return expect(_B.arrayize(19)).to.deep.equal([19]);
  });
  it("arrayize an Object", function () {
    return expect(_B.arrayize({
      a: 1,
      b: 2
    })).to.deep.equal([{
        a: 1,
        b: 2
      }]);
  });
  it("arrayize an existing array", function () {
    var arr;
    arr = [
      1,
      "john"
    ];
    return expect(_B.arrayize(arr)).to.equal(arr);
  });
  return it("arrayize nothingness", function () {
    return expect(_B.arrayize(void 0)).to.deep.equal([]);
  });
});

return module.exports;

})
}).call(this, (typeof exports === 'object' ? global : window), (typeof exports === 'object' ? global : window))