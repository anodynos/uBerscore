// Generated by uRequire v0.4.2
(function () {
  var __isAMD = (typeof define === 'function' && define.amd),
    __isNode = (typeof exports === 'object'),
    __isWeb = !__isNode;
(function (root,factory) {
  if (typeof exports === 'object') {
   var nr = new (require('urequire').NodeRequirer) ('collections/array/arrayize-spec', module, __dirname, '.');
   module.exports = factory(nr.require, exports, module, nr.require('lodash'), nr.require('agreement/isAgree'), nr.require('chai'), nr.require('uberscore'), nr.require('../../spec-data'));
 } else if (typeof define === 'function' && define.amd) {
     define(['require', 'exports', 'module', 'lodash', 'agreement/isAgree', 'chai', 'uberscore', '../../spec-data'], factory);
 }
})(this,function (require, exports, module, _, isAgree, chai, _B, data) {
  // uRequire: start body of original nodejs module
var arrInt, arrInt2, arrStr, assert, bundle, expect, global, obj, project, _ref;

assert = chai.assert;

expect = chai.expect;

_ref = _.clone(data, true), project = _ref.project, global = _ref.global, bundle = _ref.bundle, obj = _ref.obj, arrInt = _ref.arrInt, arrInt2 = _ref.arrInt2, arrStr = _ref.arrStr;

describe("arrayize :", function() {
    it("arrayize a String", function() {
        return expect(_B.arrayize("agelos")).to.deep.equal([ "agelos" ]);
    });
    it("arrayize a Number", function() {
        return expect(_B.arrayize(19)).to.deep.equal([ 19 ]);
    });
    it("arrayize an Object", function() {
        return expect(_B.arrayize({
            a: 1,
            b: 2
        })).to.deep.equal([ {
            a: 1,
            b: 2
        } ]);
    });
    it("arrayize an existing array", function() {
        var arr;
        arr = [ 1, "john" ];
        return expect(_B.arrayize(arr)).to.equal(arr);
    });
    return it("arrayize nothingness", function() {
        return expect(_B.arrayize(void 0)).to.deep.equal([]);
    });
});
// uRequire: end body of original nodejs module


return module.exports;
})
})();