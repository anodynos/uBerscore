// Generated by uRequire v0.3.0alpha17
(function () {
  var __isAMD = (typeof define === 'function' && define.amd),
    __isNode = (typeof exports === 'object'),
    __isWeb = !__isNode;
(function (root,factory) {
  if (typeof exports === 'object') {
   var nr = new (require('urequire').NodeRequirer) ('deepCloneDefaults-spec', __dirname, '.');
   module.exports = factory(nr.require, exports, module);
 } else if (typeof define === 'function' && define.amd) {
     define(['require', 'exports', 'module', 'chai', 'lodash', 'uberscore', './spec-data'], factory);
 }
})(this,function (require, exports, module) {
  // uRequire: start body of original nodejs module
var assert, bundleDefaults, chai, data, expect, globalDefaults, projectDefaults, _, _B;

chai = require("chai");

assert = chai.assert;

expect = chai.expect;

_ = require("lodash");

_B = require("uberscore");

data = require("./spec-data");

projectDefaults = _.clone(data.projectDefaults, true);

globalDefaults = _.clone(data.globalDefaults, true);

bundleDefaults = _.clone(data.bundleDefaults, true);

describe("deepCloneDefaults:", function() {
    it("more 'specific' options eg. project, merged (taking precedence) to more 'global' defaults", function() {
        var result;
        result = _B.deepCloneDefaults(projectDefaults, globalDefaults);
        return expect(result).to.deep.equal({
            enabled: true,
            bundleRoot: "/global/project",
            compilers: {
                "rjs-build": "project-rjs-build"
            }
        });
    });
    it("many defaults", function() {
        var result;
        result = _B.deepCloneDefaults(bundleDefaults, projectDefaults, globalDefaults);
        return expect(result).to.deep.equal({
            enabled: true,
            bundleRoot: "/global/project/bundle",
            compilers: {
                "coffee-script": {
                    params: "w b"
                },
                urequire: {
                    scanPrevent: true
                },
                "rjs-build": "project-rjs-build"
            }
        });
    });
    return it("Original objects not mutated", function() {
        expect(bundleDefaults).to.deep.equal(data.bundleDefaults);
        expect(projectDefaults).to.deep.equal(data.projectDefaults);
        return expect(globalDefaults).to.deep.equal(data.globalDefaults);
    });
});
// uRequire: end body of original nodejs module


return module.exports;
})
})();