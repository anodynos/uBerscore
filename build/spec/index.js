/**
* uberscore https://github.com/anodynos/uBerscore
*
* uBerscore js is (still) an early experiment: a 'higher' level data manipulator for all kinds of js collections (objects+arrays); it offers functionality & shortcuts that underscore doesn't, wouldn't, shouldn't have.
* Version 0.0.18 - Compiled on 2014-11-11 20:11:54
* Repository git://github.com/anodynos/uBerscore
* Copyright(c) 2014 Agelos Pikoulas <agelos.pikoulas@gmail.com>
* License MIT http://www.opensource.org/licenses/mit-license.php
*/

// Generated by uRequire v0.7.0-beta8 - template: 'UMDplain' 
(function () {
  
var __isAMD = !!(typeof define === 'function' && define.amd),
    __isNode = (typeof exports === 'object'),
    __isWeb = !__isNode;
(function (factory) {
  if (typeof exports === 'object') {
    module.exports = factory(require, exports, module, require('lodash'), require('chai'), require('uberscore'), require('./spec-data'), require('./specHelpers'));
} else if (typeof define === 'function' && define.amd) { define(['require', 'exports', 'module', 'lodash', 'chai', 'uberscore', './spec-data', './specHelpers', './blending/Blender-spec', './blending/deepExtend-spec', './blending/lodash-merge-spec', './blending/Mergers_Blender-spec', './blending/DeepDefaultsBlender-spec', './blending/ArrayizeBlender-spec', './blending/traverse-spec', './blending/clone-spec', './objects/getInheritedPropertyNames-spec', './objects/getp-spec', './objects/getRefs-spec', './objects/isDisjoint-spec', './objects/isEqual-spec', './objects/isRefDisjoint-spec', './objects/mutate-spec', './objects/okv-spec', './objects/setp-spec', './objects/isOK-True-False-spec', './collections/go-spec', './collections/array/arrayize-spec', './collections/array/isEqualArraySet-spec', './agreement/isAgree-spec', './types/types-spec', './utils/CoffeeUtils-spec', './utils/CalcCachedProperties-spec', './Logger-spec', './uberscore-spec'], factory) } else throw new Error('uRequire: Loading UMD module as <script>, without `build.noLoaderUMD`');
}).call(this, function (require, exports, module, _, chai, _B, data, spH) {
  

var equal = spH["equal"],notEqual = spH["notEqual"],ok = spH["ok"],notOk = spH["notOk"],tru = spH["tru"],fals = spH["fals"],deepEqual = spH["deepEqual"],notDeepEqual = spH["notDeepEqual"],exact = spH["exact"],notExact = spH["notExact"],iqual = spH["iqual"],notIqual = spH["notIqual"],ixact = spH["ixact"],notIxact = spH["notIxact"],like = spH["like"],notLike = spH["notLike"],likeBA = spH["likeBA"],notLikeBA = spH["notLikeBA"],equalSet = spH["equalSet"],notEqualSet = spH["notEqualSet"];
var expect = chai["expect"];


var l = new _B.Logger('index.js');

var uberscore, _lodash_;
_lodash_ = require("lodash");
uberscore = require("uberscore");
require("./blending/Blender-spec");
require("./blending/deepExtend-spec");
require("./blending/lodash-merge-spec");
require("./blending/Mergers_Blender-spec");
require("./blending/DeepDefaultsBlender-spec");
require("./blending/ArrayizeBlender-spec");
require("./blending/traverse-spec");
require("./blending/clone-spec");
require("./objects/getInheritedPropertyNames-spec");
require("./objects/getp-spec");
require("./objects/getRefs-spec");
require("./objects/isDisjoint-spec");
require("./objects/isEqual-spec");
require("./objects/isRefDisjoint-spec");
require("./objects/mutate-spec");
require("./objects/okv-spec");
require("./objects/setp-spec");
require("./objects/isOK-True-False-spec");
require("./collections/go-spec");
require("./collections/array/arrayize-spec");
require("./collections/array/isEqualArraySet-spec");
require("./agreement/isAgree-spec");
require("./types/types-spec");
require("./utils/CoffeeUtils-spec");
require("./utils/CalcCachedProperties-spec");
require("./Logger-spec");
require("./spec-data");
require("./uberscore-spec");

return module.exports;

})
}).call(this)