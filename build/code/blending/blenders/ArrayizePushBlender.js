// Generated by uRequire v0.4.2
(function () {
  var __isAMD = (typeof define === 'function' && define.amd),
    __isNode = (typeof exports === 'object'),
    __isWeb = !__isNode;
(function (root,factory) {
  if (typeof exports === 'object') {
   var nr = new (require('urequire').NodeRequirer) ('blending/blenders/ArrayizePushBlender', module, __dirname, '.');
   module.exports = factory(nr.require, exports, module, nr.require('lodash'), nr.require('../../agreement/isAgree'));
 } else if (typeof define === 'function' && define.amd) {
     define(['require', 'exports', 'module', 'lodash', '../../agreement/isAgree', '../../collections/array/arrayize', './DeepCloneBlender'], factory);
 }
})(this,function (require, exports, module, _, isAgree) {
  // uRequire: start body of original nodejs module
var ArrayizePushBlender, arrayize, __hasProp = {}.hasOwnProperty, __extends = function(child, parent) {
    for (var key in parent) {
        if (__hasProp.call(parent, key)) child[key] = parent[key];
    }
    function ctor() {
        this.constructor = child;
    }
    ctor.prototype = parent.prototype;
    child.prototype = new ctor;
    child.__super__ = parent.prototype;
    return child;
}, __slice = [].slice, __indexOf = [].indexOf || function(item) {
    for (var i = 0, l = this.length; i < l; i++) {
        if (i in this && this[i] === item) return i;
    }
    return -1;
};

arrayize = require("../../collections/array/arrayize");

ArrayizePushBlender = function(_super) {
    __extends(ArrayizePushBlender, _super);
    function ArrayizePushBlender() {
        var blenderBehaviors;
        blenderBehaviors = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        this.blenderBehaviors = blenderBehaviors;
        (this.defaultBlenderBehaviors || (this.defaultBlenderBehaviors = [])).push(ArrayizePushBlender.behavior);
        ArrayizePushBlender.__super__.constructor.apply(this, arguments);
    }
    ArrayizePushBlender.behavior = {
        order: [ "src" ],
        unique: false,
        "*": "pushToArray",
        pushToArray: function(prop, src, dst, bl) {
            var itemsToPush, srcArray, v, _i, _len;
            dst[prop] = arrayize(dst[prop]);
            srcArray = arrayize(src[prop]);
            if (_.isEqual(srcArray[0], [ null ])) {
                dst[prop] = [];
                srcArray = srcArray.slice(1);
            }
            itemsToPush = bl.unique ? function() {
                var _i, _len, _results;
                _results = [];
                for (_i = 0, _len = srcArray.length; _i < _len; _i++) {
                    v = srcArray[_i];
                    if (__indexOf.call(dst[prop], v) < 0) {
                        _results.push(v);
                    }
                }
                return _results;
            }() : srcArray;
            for (_i = 0, _len = itemsToPush.length; _i < _len; _i++) {
                v = itemsToPush[_i];
                dst[prop].push(v);
            }
            return dst[prop];
        }
    };
    return ArrayizePushBlender;
}(require("./DeepCloneBlender"));

module.exports = ArrayizePushBlender;
// uRequire: end body of original nodejs module


return module.exports;
})
})();